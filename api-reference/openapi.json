{
  "openapi": "3.1.0",
  "info": {
    "title": "HydraAi API",
    "summary": "–ì–∏–¥—Ä–∞ –≤—Å–µ–≥–¥–∞ –æ—Ç—Ä–∞—â–∏–≤–∞–µ—Ç –Ω–æ–≤—É—é –≥–æ–ª–æ–≤—É!",
    "description": "\nChimichangApp API helps you do awesome stuff. üöÄ\n\n## Items\n\n    You can **read items**.\n\n## Users\n\nYou will be able to:\n\n* **Create users** (_not implemented_).\n* **Read users** (_not implemented_).\n",
    "contact": {
      "name": "HydraAi",
      "url": "https://hydraai.ru/"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/v1/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Profile",
        "operationId": "get_profile_v1_users_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalancePublic"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/models": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get Models",
        "operationId": "get_models_v1_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "tags": [
          "Creation"
        ],
        "summary": "Req Chat Completions",
        "operationId": "req_chat_completions_v1_chat_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCompletionsForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ChatCompletionsForm": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message-Input"
            },
            "type": "array",
            "title": "Messages",
            "description": "–°–æ–æ–±—â–µ–Ω–∏—è"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "–ú–æ–¥–µ–ª—å –∫ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤—Ç—å –∑–∞–ø—Ä–æ—Å",
            "examples": [
              "llama-3-8b"
            ]
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤",
            "default": 0
          },
          "temperature": {
            "type": "number",
            "maximum": 2,
            "minimum": 0,
            "title": "Temperature",
            "description": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
            "default": 0.7
          },
          "top_p": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Top P",
            "description": "top_p",
            "default": 0
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "description": "–ü–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –≤ –°—Ç—Ä–∏–º —Ñ–æ—Ä–º–∞—Ç–µ –∏–ª–∏ –Ω–µ—Ç",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "messages",
          "model"
        ],
        "title": "ChatCompletionsForm"
      },
      "ChatCompletionsResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "object": {
            "type": "string",
            "title": "Object"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "choices": {
            "items": {
              "$ref": "#/components/schemas/Choice"
            },
            "type": "array",
            "title": "Choices"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          }
        },
        "type": "object",
        "required": [
          "id",
          "object",
          "created",
          "model",
          "choices",
          "usage"
        ],
        "title": "ChatCompletionsResponse"
      },
      "Choice": {
        "properties": {
          "message": {
            "$ref": "#/components/schemas/Message-Output"
          },
          "logprobs": {
            "anyOf": [
              {

              },
              {
                "type": "null"
              }
            ],
            "title": "Logprobs"
          },
          "finish_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finish Reason"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          }
        },
        "type": "object",
        "required": [
          "message",
          "index"
        ],
        "title": "Choice"
      },
      "ContentItem": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "image_url": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageUrl"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ContentItem"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageUrl": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "ImageUrl"
      },
      "LLMModelObject": {
        "type": "string",
        "enum": [
          "model",
          "proxy"
        ],
        "title": "LLMModelObject"
      },
      "LLMModelPricingType": {
        "type": "string",
        "enum": [
          "tokens",
          "image",
          "time",
          "characters",
          "request"
        ],
        "title": "LLMModelPricingType"
      },
      "LLMModelType": {
        "type": "string",
        "enum": [
          "chat",
          "vision",
          "language",
          "image",
          "audio"
        ],
        "title": "LLMModelType"
      },
      "Message-Input": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "description": "–†–æ–ª—å",
            "examples": [
              "user"
            ]
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ContentItem"
                },
                "type": "array"
              }
            ],
            "title": "Content",
            "description": "–ö–æ–Ω—Ç–µ–Ω—Ç",
            "examples": [
              "–ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–µ–±–æ?"
            ]
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "Message"
      },
      "Message-Output": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "description": "–†–æ–ª—å",
            "examples": [
              "user"
            ]
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ContentItem"
                },
                "type": "array"
              }
            ],
            "title": "Content",
            "description": "–ö–æ–Ω—Ç–µ–Ω—Ç",
            "examples": [
              "–ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–µ–±–æ?"
            ]
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "Message"
      },
      "ModelList": {
        "properties": {
          "object": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Object",
            "default": "list"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "title": "ModelList"
      },
      "Usage": {
        "properties": {
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          },
          "total_time": {
            "type": "number",
            "title": "Total Time"
          },
          "cost_request": {
            "type": "number",
            "title": "Cost Request"
          },
          "free_request": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Free Request"
          }
        },
        "type": "object",
        "required": [
          "prompt_tokens",
          "completion_tokens",
          "total_tokens",
          "total_time",
          "cost_request",
          "free_request"
        ],
        "title": "Usage"
      },
      "UserBalancePublic": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_type": {
            "type": "string",
            "title": "User Type"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Used At"
          },
          "balance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ],
            "title": "Balance"
          },
          "total_balance_added": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ],
            "title": "Total Balance Added"
          },
          "free_requests": {
            "type": "integer",
            "title": "Free Requests"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_type",
          "last_used_at",
          "balance",
          "total_balance_added",
          "free_requests"
        ],
        "title": "UserBalancePublic"
      },
      "UserModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "object": {
            "$ref": "#/components/schemas/LLMModelObject"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "context": {
            "type": "integer",
            "title": "Context"
          },
          "type": {
            "$ref": "#/components/schemas/LLMModelType"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "img": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Img"
          },
          "owned_by": {
            "type": "string",
            "title": "Owned By"
          },
          "proxy_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proxy To"
          },
          "pricing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserModelPricing"
              },
              {
                "type": "null"
              }
            ]
          },
          "alt_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alt Ids"
          }
        },
        "type": "object",
        "required": [
          "id",
          "object",
          "created",
          "context",
          "type",
          "active",
          "owned_by"
        ],
        "title": "UserModel"
      },
      "UserModelPricing": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LLMModelPricingType",
            "default": "tokens"
          },
          "in_cost_per_million": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Cost Per Million"
          },
          "out_cost_per_million": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Out Cost Per Million"
          },
          "cost_per_million": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Million"
          },
          "cost_per_image": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Image"
          },
          "cost_per_second": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Second"
          },
          "cost_per_request": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Request"
          },
          "free_requests": {
            "type": "boolean",
            "title": "Free Requests",
            "default": false
          }
        },
        "type": "object",
        "title": "UserModelPricing"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}